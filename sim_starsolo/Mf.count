include Mf.common
include $(dd)/Mf.pars

.SECONDARY:

.PHONY:
all:
	echo No default target, please specify one.

######################################################### common definitions
define PREP_
	date
endef
define PREP_sleep
	date
	sleep 900
	date
endef
define PREP_memUsage
	date
	sleep 20
	$(dd)/scripts/memUsage.sh $(processName) &> $(@D)/mem.log &
endef

#sleep 300

######################################################### kb counting
count/kallisto_%: processName:=kb

define kbPar_mult =
        --mm
endef

define COUNT_kallisto_0.49.0 =
       $(timer) kb count --kallisto $(dd)/exe/kallisto_0.49.0 --bustools $(dd)/exe/bustools_0.41.1 -t $(threads) -x $(tech)V$(techV) --workflow $(genomeT1) \
                  -i `ls -m $(refDir)/index* | tr -d ' \n'` -g $(refDir)/g -c1 $(refDir)/c1 -c2 $(refDir)/c2 -o ./ \
                  `paste <(ls $(sampleDir)/*_R1*) <(ls $(sampleDir)/*_R2*)` \
                 $(kbPar_$(toolP)) >& log && \
       echo Success > CO
endef


count/kallisto_%/CO:
	$(PREP_$(PREPoption))
	'rm' -rf $(@D) && mkdir -p $(@D) && cd $(@D) &&\
	$(COUNT_$(tool))

######################################################### STAR count
STARpar_10X          := --soloType CB_UMI_Simple
STARpar_noSAM        := --outSAMtype None
STARpar_GeneFull     := --soloFeatures GeneFull
STARpar_mult         := --soloMultiMappers Uniform Rescue PropUnique EM
STARpar_ENCODE       := --outFilterType BySJout --outFilterMultimapNmax 20 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverReadLmax 0.04 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000
STARpar_sims         := --soloUMIdedup Exact --soloUMIfiltering MultiGeneUMI_All --clipAdapterType CellRanger4
STARpar_CR4          := --soloCBmatchWLtype 1MM_multi_Nbase_pseudocounts --soloUMIfiltering MultiGeneUMI_CR --soloUMIdedup 1MM_CR --soloCellFilter EmptyDrops_CR --clipAdapterType CellRanger4 --outFilterScoreMin 30 --outSJtype None

####################################################### not used
STARpar_GeneGeneFull := --soloFeatures Gene GeneFull
STARpar_MultiGeneUMI := --soloUMIfiltering MultiGeneUMI
STARpar_MultiGeneUMI-All := --soloUMIfiltering MultiGeneUMI_All
STARpar_UMIdedupExact:= --soloUMIdedup Exact
STARpar_BAM          := --outSAMattributes NH HI nM AS CR UR CB UB GX GN --outSAMtype BAM SortedByCoordinate
#STARpar_noSJ         := --outSJtype None
STARpar_UniqueGenomic   := --outFilterMultimapNmax 1
STARpar_CR3old := --soloUMIfiltering MultiGeneUMI --soloCBmatchWLtype 1MM_multi_pseudocounts
STARpar_CR3    := $(STARpar_CR3old) --soloUMIdedup 1MM_CR --soloCellFilter EmptyDrops_CR

count/STAR_%: STARparCommon = --limitIObufferSize 50000000 50000000
count/STAR_%: STARparAll = $(STARparCommon)   $(EXTRA_PARS)   $(foreach pp, $(subst _, , $(toolP)), $(STARpar_$(pp)))

count/STAR_%: read1=$(shell cd $(sampleDir) && ls *_R1* | tr ' \n' ',' | head -c -1)
count/STAR_%: read2=$(shell cd $(sampleDir) && ls *_R2* | tr ' \n' ',' | head -c -1)
count/STAR_%: STARreadComm=$(if $(filter $(read1),gz), zcat, cat)

count/STAR_%: processName:=STAR

count/STAR_%/CO: # target is COmpletion file
        #$(case)
        #$(tech) $(techV) $(sampleName) $(threads)
        # $(PREPoption)
	ls -d $(sampleDir) $(refDir) $(dd)/data/whitelists/$(tech)v$(techV)
	$(PREP_$(PREPoption))
	'rm' -rf $(@D) && mkdir -p $(@D) && cd $(@D) &&\
	if [[ $(read1) == *\.gz ]]; then STARreadComm=zcat; else STARreadComm=cat; fi  && \
	$(timer) $(dd)/exe/$(tool) --genomeDir $(refDir) --runThreadN $(threads)  --readFilesCommand $$STARreadComm \
		--readFilesPrefix $(sampleDir) --readFilesIn $(read2) $(read1) \
		--soloCBwhitelist $(dd)/data/whitelists/$(tech)v$(techV) \
		--soloUMIlen $(umiLen) \
		$(STARparAll) >& log && \
	echo Success > CO



